// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(['Utils/Utils', 'UI/Modal'], function(Utils, Modal) {
    var CityManager;
    CityManager = (function() {
      function CityManager() {
        this.updateCity = __bind(this.updateCity, this);
        this.cityListJ = $('#cities');
        this.createCityBtnJ = $('#createCity');
        this.createCityBtnJ.click(this.createCityModal);
        Dajaxice.draw.loadCities(this.loadCities);
        return;
      }

      CityManager.prototype.createCity = function(data) {
        Dajaxice.draw.createCity(R.loadCityFromServer, {
          name: data.name,
          "public": data["public"]
        });
      };

      CityManager.prototype.createCityModal = function() {
        var modal;
        modal = Modal.createModal({
          title: 'Create city',
          submit: this.createCity,
          postSubmit: 'load'
        });
        modal.addTextInput({
          label: "City name",
          name: 'name',
          required: true,
          submitShortcut: true,
          placeholder: 'Paris'
        });
        modal.addCheckbox({
          label: "Public",
          name: 'public',
          helpMessage: "Public cities will be accessible by anyone.",
          defaultValue: true
        });
        modal.show();
      };

      CityManager.prototype.loadCities = function(result) {
        var btnJ, city, cityJ, userCities, _i, _len;
        if (!R.loader.checkError(result)) {
          return;
        }
        userCities = JSON.parse(result.userCities);
        for (_i = 0, _len = userCities.length; _i < _len; _i++) {
          city = userCities[_i];
          cityJ = $("<li>");
          cityJ.text(city.name);
          cityJ.attr('data-owner', city.owner).attr('data-pk', city._id.$oid).attr('data-public', 0);
          cityJ.click(this.loadCity);
          btnJ = $('<button type="button"><span class="glyphicon glyphicon-cog" aria-hidden="true"></span></button>');
          btnJ.click(this.openCitySettings);
          cityJ.append(btnJ);
          this.cityListJ.apppend(cityJ);
        }
      };

      CityManager.prototype.loadCity = function(name, owner) {
        if (name == null) {
          name = $(this).parents('tr:first').attr('data-name');
        }
        if (owner == null) {
          owner = $(this).parents('tr:first').attr('data-owner');
        }
        R.unload();
        R.city = {
          owner: owner,
          name: name,
          site: null
        };
        R.loader.load();
        R.view.updateHash();
      };

      CityManager.prototype.openCitySettings = function() {
        var buttonJ, isPublic, modal, name, parentJ, pk;
        event.stopPropagation();
        buttonJ = $(this);
        parentJ = buttonJ.parents('tr:first');
        name = parentJ.attr('data-name');
        isPublic = parseInt(parentJ.attr('data-public'));
        pk = parentJ.attr('data-pk');
        modal = Modal.createModal({
          title: 'Modify city',
          submit: this.updateCity,
          data: {
            pk: pk
          },
          postSubmit: 'load'
        });
        modal.addTextInput({
          name: 'name',
          label: 'Name',
          defaultValue: name,
          required: true,
          submitShortcut: true
        });
        modal.addCheckbox({
          name: 'public',
          label: 'Public',
          helpMessage: "Public cities will be accessible by anyone.",
          defaultValue: isPublic
        });
        modal.show();
      };

      CityManager.prototype.updateCity = function(data) {
        Dajaxice.draw.updateCity(this.updateCityCallback, {
          pk: data.data.pk,
          name: data.name,
          "public": data["public"]
        });
      };

      CityManager.prototype.updateCityCallback = function() {
        var city, modal, modalBodyJ, rowJ;
        modal = Modal.getModalByTitle('Modify city');
        modal.hide();
        if (!R.loader.checkError(result)) {
          return;
        }
        city = JSON.parse(result.city);
        R.alertManager.alert("City successfully renamed to: " + city.name, "info");
        modalBodyJ = Modal.getModalByTitle('Open city').modalBodyJ;
        rowJ = modalBodyJ.find('[data-pk="' + city._id.$oid + '"]');
        rowJ.attr('data-name', city.name);
        rowJ.attr('data-public', Number(city["public"] || 0));
        rowJ.find('.name').text(city.name);
        rowJ.find('.public').text(city["public"] ? 'Public' : 'Private');
      };

      return CityManager;

    })();
  });

}).call(this);
