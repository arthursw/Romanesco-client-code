// Generated by CoffeeScript 1.7.1
(function() {
  define(['Items/Item', 'jqueryUi', 'scrollbar'], function(Item) {
    var Sidebar;
    Sidebar = (function() {
      function Sidebar() {
        this.sidebarJ = $("#sidebar");
        this.favoriteToolsJ = $("#FavoriteTools .tool-list");
        this.allToolsContainerJ = $("#AllTools");
        this.allToolsJ = this.allToolsContainerJ.find(".all-tool-list");
        this.initializeFavoriteTools();
        this.handleJ = this.sidebarJ.find(".sidebar-handle");
        this.handleJ.click(this.toggleSidebar);
        this.itemListsJ = $("#RItems .layers");
        this.pathListJ = this.itemListsJ.find(".rPath-list");
        this.pathListJ.sortable({
          stop: Item.zIndexSortStop,
          delay: 250
        });
        this.pathListJ.disableSelection();
        this.divListJ = this.itemListsJ.find(".rDiv-list");
        this.divListJ.sortable({
          stop: Item.zIndexSortStop,
          delay: 250
        });
        this.divListJ.disableSelection();
        this.itemListsJ.find('.title').click(function(event) {
          $(this).parent().toggleClass('closed');
        });
        $(".mCustomScrollbar").mCustomScrollbar({
          keyboard: false
        });
        return;
      }

      Sidebar.prototype.initializeFavoriteTools = function() {
        var defaultFavoriteTools, error;
        this.favoriteTools = [];
        if (typeof localStorage !== "undefined" && localStorage !== null) {
          try {
            this.favoriteTools = JSON.parse(localStorage.favorites);
          } catch (_error) {
            error = _error;
            console.log(error);
          }
        }
        defaultFavoriteTools = [];
        while (this.favoriteTools.length < 8 && defaultFavoriteTools.length > 0) {
          Utils.Array.pushIfAbsent(this.favoriteTools, defaultFavoriteTools.pop().label);
        }
      };

      Sidebar.prototype.toggleToolToFavorite = function(event, btnJ) {
        var cloneJ, li, names, targetJ, toolName, _i, _len, _ref;
        if (btnJ == null) {
          event.stopPropagation();
          targetJ = $(event.target);
          btnJ = targetJ.parents("li.tool-btn:first");
        }
        toolName = btnJ.attr("data-name");
        if (btnJ.hasClass("selected")) {
          btnJ.removeClass("selected");
          this.favoriteToolsJ.find("[data-name='" + toolName + "']").remove();
          Utils.Array.remove(this.favoriteTools, toolName);
        } else {
          btnJ.addClass("selected");
          cloneJ = btnJ.clone();
          this.favoriteToolsJ.append(cloneJ);
          cloneJ.click(function(event) {
            var _ref;
            toolName = $(this).attr("data-name");
            if ((_ref = R.tools[toolName]) != null) {
              _ref.select();
            }
          });
          this.favoriteTools.push(toolName);
        }
        if (typeof localStorage === "undefined" || localStorage === null) {
          return;
        }
        names = [];
        _ref = this.favoriteToolsJ.children();
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          li = _ref[_i];
          names.push($(li).attr("data-name"));
        }
        localStorage.favorites = JSON.stringify(names);
      };

      Sidebar.prototype.show = function() {
        this.sidebarJ.removeClass("r-hidden");
        R.codeEditor.editorJ.removeClass("r-hidden");
        R.alertsContainer.removeClass("r-sidebar-hidden");
        this.handleJ.find("span").removeClass("glyphicon-chevron-right").addClass("glyphicon-chevron-left");
      };

      Sidebar.prototype.hide = function() {
        this.sidebarJ.addClass("r-hidden");
        R.codeEditor.editorJ.addClass("r-hidden");
        R.alertsContainer.addClass("r-sidebar-hidden");
        this.handleJ.find("span").removeClass("glyphicon-chevron-left").addClass("glyphicon-chevron-right");
      };

      Sidebar.prototype.toggleSidebar = function(show) {
        if (show == null) {
          show = !this.sidebarJ.hasClass("r-hidden");
        }
        if (show) {
          this.show();
        } else {
          this.hide();
        }
      };

      return Sidebar;

    })();
    return Sidebar;
  });

}).call(this);

//# sourceMappingURL=Sidebar.map
