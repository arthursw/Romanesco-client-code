// Generated by CoffeeScript 1.7.1
(function() {
  define(['utils'], function() {
    var Button;
    Button = (function() {
      function Button(name, iconURL, favorite, category, parentJ) {
        var btnJ, categories, favoriteBtnJ, hJ, liJ, shortName, shortNameJ, toolNameJ, ulJ, word, words, _i, _j, _len, _len1;
        if (category == null) {
          category = null;
        }
        if (parentJ == null) {
          parentJ = R.allToolsJ;
        }
        if ((category != null) && category !== "") {
          categories = category.split("/");
          for (_i = 0, _len = categories.length; _i < _len; _i++) {
            category = categories[_i];
            ulJ = parentJ.find("li[data-name='" + category + "'] > ul");
            if (ulJ.length === 0) {
              liJ = $("<li data-name='" + category + "'>");
              liJ.addClass('category');
              hJ = $('<h6>');
              hJ.text(category).addClass("title");
              liJ.append(hJ);
              ulJ = $("<ul>");
              ulJ.addClass('folder');
              liJ.append(ulJ);
              hJ.click(function(event) {
                $(this).parent().toggleClass('closed');
              });
              parentJ.append(liJ);
            }
            parentJ = ulJ;
          }
        }
        btnJ = $("<li>");
        btnJ.attr("data-name", name);
        btnJ.attr("alt", name);
        if ((iconURL != null) && iconURL !== '') {
          if (iconURL.indexOf('//') < 0 && iconURL.indexOf('static/images/icons/inverted/') < 0) {
            iconURL = 'static/images/icons/inverted/' + iconURL;
          }
          btnJ.append('<img src="' + iconURL + '" alt="' + name + '-icon">');
        } else {
          btnJ.addClass("text-btn");
          words = name.split(" ");
          shortName = "";
          if (words.length > 1) {
            for (_j = 0, _len1 = words.length; _j < _len1; _j++) {
              word = words[_j];
              shortName += word.substring(0, 1);
            }
          } else {
            shortName += name.substring(0, 2);
          }
          shortNameJ = $('<span class="short-name">').text(shortName + ".");
          btnJ.append(shortNameJ);
        }
        parentJ.append(btnJ);
        toolNameJ = $('<span class="tool-name">').text(name);
        btnJ.append(toolNameJ);
        btnJ.addClass("tool-btn");
        favoriteBtnJ = $("<button type=\"button\" class=\"btn btn-default favorite-btn\">\n	  			<span class=\"glyphicon glyphicon-star\" aria-hidden=\"true\"></span>\n</button>");
        favoriteBtnJ.click(R.toggleToolToFavorite);
        btnJ.append(favoriteBtnJ);
        if (favorite) {
          R.toggleToolToFavorite(null, btnJ);
        }
        return;
      }

      return Button;

    })();
    R.toggleToolToFavorite = function(event, btnJ) {
      var cloneJ, li, names, targetJ, toolName, _i, _len, _ref;
      if (btnJ == null) {
        event.stopPropagation();
        targetJ = $(event.target);
        btnJ = targetJ.parents("li.tool-btn:first");
      }
      toolName = btnJ.attr("data-name");
      if (btnJ.hasClass("selected")) {
        btnJ.removeClass("selected");
        R.favoriteToolsJ.find("[data-name='" + toolName + "']").remove();
        Utils.Array.remove(R.favoriteTools, toolName);
      } else {
        btnJ.addClass("selected");
        cloneJ = btnJ.clone();
        R.favoriteToolsJ.append(cloneJ);
        cloneJ.click(function(event) {
          var _ref;
          toolName = $(this).attr("data-name");
          if ((_ref = R.tools[toolName]) != null) {
            _ref.select();
          }
        });
        R.favoriteTools.push(toolName);
      }
      if (typeof localStorage === "undefined" || localStorage === null) {
        return;
      }
      names = [];
      _ref = R.favoriteToolsJ.children();
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        li = _ref[_i];
        names.push($(li).attr("data-name"));
      }
      localStorage.favorites = JSON.stringify(names);
    };
    R.toggleSidebar = function(show) {
      if (show == null) {
        show = !R.sidebarJ.hasClass("r-hidden");
      }
      if (show) {
        R.sidebarJ.addClass("r-hidden");
        R.codeEditor.editorJ.addClass("r-hidden");
        R.alertsContainer.addClass("r-sidebar-hidden");
        R.sidebarHandleJ.find("span").removeClass("glyphicon-chevron-left").addClass("glyphicon-chevron-right");
      } else {
        R.sidebarJ.removeClass("r-hidden");
        R.codeEditor.editorJ.removeClass("r-hidden");
        R.alertsContainer.removeClass("r-sidebar-hidden");
        R.sidebarHandleJ.find("span").removeClass("glyphicon-chevron-right").addClass("glyphicon-chevron-left");
      }
    };
    return {
      Button: Button,
      Sidebar: Sidebar
    };
  });

}).call(this);

//# sourceMappingURL=Sidebar.map
