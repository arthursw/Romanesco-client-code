// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['Item'], function(Item) {
    var SelectionRectangle;
    SelectionRectangle = (function(_super) {
      __extends(SelectionRectangle, _super);

      function SelectionRectangle(rectangle, extractImage) {
        var separatorJ;
        this.rectangle = rectangle;
        SelectionRectangle.__super__.constructor.call(this);
        this.drawing = new P.Path.Rectangle(this.rectangle);
        this.drawing.name = 'selection rectangle background';
        this.drawing.strokeWidth = 1;
        this.drawing.strokeColor = R.selectionBlue;
        this.drawing.controller = this;
        this.group.addChild(this.drawing);
        separatorJ = R.stageJ.find(".text-separator");
        this.buttonJ = R.templatesJ.find(".screenshot-btn").clone().insertAfter(separatorJ);
        this.buttonJ.find('.extract-btn').click(function(event) {
          var redraw;
          redraw = $(this).attr('data-click') === 'redraw-snapshot';
          extractImage(redraw);
        });
        this.updateTransform();
        this.select();
        R.tools['Select'].select();
        return;
      }

      SelectionRectangle.prototype.remove = function() {
        this.removing = true;
        SelectionRectangle.__super__.remove.call(this);
        this.buttonJ.remove();
        R.tools['Screenshot'].selectionRectangle = null;
      };

      SelectionRectangle.prototype.deselect = function() {
        if (!SelectionRectangle.__super__.deselect.call(this)) {
          return false;
        }
        if (!this.removing) {
          this.remove();
        }
        return true;
      };

      SelectionRectangle.prototype.setRectangle = function(rectangle, update) {
        SelectionRectangle.__super__.setRectangle.call(this, rectangle, update);
        Utils.P.Rectangle.updatePathRectangle(this.drawing, rectangle);
        this.updateTransform();
      };

      SelectionRectangle.prototype.moveTo = function(position, update) {
        SelectionRectangle.__super__.moveTo.call(this, position, update);
        this.updateTransform();
      };

      SelectionRectangle.prototype.updateTransform = function() {
        var transfrom, viewPos;
        viewPos = P.view.projectToView(this.rectangle.center);
        transfrom = 'translate(' + viewPos.x + 'px,' + viewPos.y + 'px)';
        transfrom += 'translate(-50%, -50%)';
        this.buttonJ.css({
          'position': 'absolute',
          'transform': transfrom,
          'top': 0,
          'left': 0,
          'transform-origin': '50% 50%',
          'z-index': 999
        });
      };

      SelectionRectangle.prototype.update = function() {};

      return SelectionRectangle;

    })(Item);
    return SelectionRectangle;
  });

}).call(this);

//# sourceMappingURL=SelectionRectangle.map
