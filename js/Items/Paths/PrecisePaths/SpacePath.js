// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['Items/Paths/PrecisePaths/StepPath', 'Spacebrew'], function(StepPath, spacebrew) {
    var SpacePath;
    SpacePath = (function(_super) {
      __extends(SpacePath, _super);

      function SpacePath() {
        return SpacePath.__super__.constructor.apply(this, arguments);
      }

      SpacePath.label = 'Space path';

      SpacePath.description = "This path sends coordinates to spacebrew.";

      SpacePath.iconURL = 'static/images/icons/inverted/editCurve.png';

      SpacePath.initializeParameters = function() {
        var parameters;
        parameters = SpacePath.__super__.constructor.initializeParameters.call(this);
        parameters['Spacebrew'] = {
          pause: {
            type: 'checkbox',
            label: 'Pause',
            "default": false,
            onChange: function(value) {
              var item, _i, _len, _ref;
              _ref = R.selectedItems;
              for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                item = _ref[_i];
                item.data.pause = value;
              }
            }
          },
          scaleDrawing: {
            type: 'slider',
            label: 'Scale',
            min: 0,
            max: 500,
            "default": 100
          }
        };
        return parameters;
      };

      SpacePath.parameters = SpacePath.initializeParameters();

      SpacePath.createTool(SpacePath);

      SpacePath.prototype.getViewBounds = function() {
        var bounds, rectangle;
        rectangle = paper.view.bounds;
        bounds = {
          x: rectangle.x,
          y: rectangle.y,
          width: rectangle.width,
          height: rectangle.height
        };
        return bounds;
      };

      SpacePath.prototype.beginCreate = function(point, event) {
        SpacePath.__super__.beginCreate.call(this, point, event);
        if (this.data.pause) {
          return;
        }
        spacebrew.send("command", "string", JSON.stringify({
          type: 'pen',
          direction: 'down'
        }));
        spacebrew.send("command", "string", JSON.stringify({
          point: point,
          type: 'moveTo',
          bounds: this.getViewBounds(),
          scale: this.data.scaleDrawing
        }));
      };

      SpacePath.prototype.updateCreate = function(point, event) {
        SpacePath.__super__.updateCreate.call(this, point, event);
        if (this.data.pause) {
          return;
        }
        spacebrew.send("command", "string", JSON.stringify({
          point: point,
          type: 'goTo',
          bounds: this.getViewBounds(),
          scale: this.data.scaleDrawing
        }));
      };

      SpacePath.prototype.createMove = function(event) {
        SpacePath.__super__.createMove.call(this, event);
      };

      SpacePath.prototype.endCreate = function(point, event) {
        SpacePath.__super__.endCreate.call(this, point, event);
        if (this.data.pause) {
          return;
        }
        spacebrew.send("command", "string", JSON.stringify({
          type: 'pen',
          direction: 'up'
        }));
      };

      return SpacePath;

    })(StepPath);
    return SpacePath;
  });

}).call(this);
