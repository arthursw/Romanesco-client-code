// Generated by CoffeeScript 1.7.1
(function() {
  define(['Utils/Utils', 'Loader', 'Socket', 'City', 'Rasterizers/RasterizerManager', 'UI/Sidebar', 'UI/Code', 'UI/Modal', 'UI/ModuleLoader', 'UI/AlertManager', 'UI/Controllers/ControllerManager', 'Commands/CommandManager', 'View/View', 'Tools/ToolManager'], function(Utils, Loader, Socket, City, RasterizerManager, Sidebar, Code, Modal, ModuleLoader, AlertManager, ControllerManager, CommandManager, View, ToolManager) {

    /*
    	 * Romanesco documentation #
    
    	Romanesco is an experiment about freedom, creativity and collaboration.
    
    	tododoc
    	tododoc: define RItems
    
    	The source code is divided in files:
    	 - [main.coffee](http://main.html) which is where the initialization
    	 - [path.coffee](http://path.html)
    	 - etc
    
    	Notations:
    	 - override means that the method extends functionnalities of the inherited method (super is called at some point)
    	 - redefine means that it totally replace the method (super is never called)
     */
    $(document).ready(function() {
      R.catchErrors = false;
      R.ignoreSockets = false;
      R.currentPaths = {};
      R.paths = new Object();
      R.items = new Object();
      R.locks = [];
      R.divs = [];
      R.sortedPaths = [];
      R.sortedDivs = [];
      R.animatedItems = [];
      R.cars = {};
      R.currentDiv = null;
      R.selectedItems = [];
      R.sidebar = new Sidebar();
      R.view = new View();
      R.loader = new Loader();
      R.socket = new Socket();
      R.alertManager = new AlertManager();
      R.controllerManager = new ControllerManager();
      R.controllerManager.createGlobalControllers();
      R.rasterizerManager = new RasterizerManager();
      R.rasterizerManager.initializeRasterizers();
      R.commandManager = new CommandManager();
      R.toolManager = new ToolManager();
      R.fileManager = new FileManager();
      R.view.initializePosition();
      if (typeof window.setPageFullyLoaded === "function") {
        window.setPageFullyLoaded(true);
      }
    });
    R.showCodeEditor = function(source) {
      if (R.codeEditor == null) {
        require(['editor'], function(CodeEditor) {
          R.codeEditor = new CodeEditor();
          if (source) {
            R.codeEditor.setSource(source);
          }
          R.codeEditor.open();
        });
      } else {
        if (source) {
          R.codeEditor.setSource(source);
        }
        R.codeEditor.open();
      }
    };
  });

}).call(this);

//# sourceMappingURL=Main.map
