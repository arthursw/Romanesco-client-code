// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['Tools/Tool'], function(Tool) {
    var MoveTool;
    MoveTool = (function(_super) {
      __extends(MoveTool, _super);

      MoveTool.label = 'Media';

      MoveTool.description = '';

      MoveTool.iconURL = 'move.png';

      MoveTool.favorite = true;

      MoveTool.category = '';

      MoveTool.cursor = {
        position: {
          x: 32,
          y: 32
        },
        name: 'default',
        icon: 'move'
      };

      function MoveTool() {
        MoveTool.__super__.constructor.call(this, true);
        this.prevPoint = {
          x: 0,
          y: 0
        };
        this.dragging = false;
        return;
      }

      MoveTool.prototype.select = function(deselectItems, updateParameters) {
        var div, _i, _len, _ref;
        if (deselectItems == null) {
          deselectItems = false;
        }
        if (updateParameters == null) {
          updateParameters = true;
        }
        MoveTool.__super__.select.call(this, deselectItems, updateParameters);
        R.stageJ.addClass("moveTool");
        _ref = R.divs;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          div = _ref[_i];
          div.disableInteraction();
        }
      };

      MoveTool.prototype.deselect = function() {
        var div, _i, _len, _ref;
        MoveTool.__super__.deselect.call(this);
        R.stageJ.removeClass("moveTool");
        _ref = R.divs;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          div = _ref[_i];
          div.enableInteraction();
        }
      };

      MoveTool.prototype.begin = function(event) {};

      MoveTool.prototype.update = function(event) {};

      MoveTool.prototype.end = function(moved) {};

      MoveTool.prototype.beginNative = function(event) {
        this.dragging = true;
        this.initialPosition = {
          x: event.pageX,
          y: event.pageY
        };
        this.prevPoint = {
          x: event.pageX,
          y: event.pageY
        };
      };

      MoveTool.prototype.updateNative = function(event) {
        if (this.dragging) {
          View.moveBy({
            x: (this.prevPoint.x - event.pageX) / P.view.zoom,
            y: (this.prevPoint.y - event.pageY) / P.view.zoom
          });
          this.prevPoint = {
            x: event.pageX,
            y: event.pageY
          };
        }
      };

      MoveTool.prototype.endNative = function(event) {
        this.dragging = false;
      };

      return MoveTool;

    })(Tool);
    Tool.Move = MoveTool;
    return MoveTool;
  });

}).call(this);

//# sourceMappingURL=MoveTool.map
